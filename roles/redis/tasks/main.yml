
- name: update apt
  apt: update_cache=yes

- name: ensure packages installed
  apt: pkg={{ item }} state=latest
  with_items:
    - make
    - build-essential

- name: download latest stable redis
  get_url: url=http://download.redis.io/redis-stable.tar.gz dest=/tmp/redis-stable.tar.gz

# - name: Redis start
#   service: name=redis state=started enabled=yes
#   become: yes

# - name: Install "redis-server" 
#   apt:
#     name: redis-server

# - name: Ensure Redis is present
#   apt: pkg=redis-server state=latest
#   become: yes

- name: untar redis
  command: tar zxf /tmp/redis-stable.tar.gz -C /tmp

- name: build redis
  command: make -C /tmp/redis-stable
  
# - name: build redis
#   command: make -C /etc/bin/redis-stable

- name: create redis group
  group: name=redis state=present system=yes

- name: create redis user
  user: name=redis group=redis createhome=no shell=/bin/false system=yes state=present

- name: make sure that /etc/redis exists
  file: path=/etc/redis state=directory mode=0755

- name: make sure that /var/db/redis exists
  file: path=/var/db/redis state=directory mode=0755 group=redis owner=redis

# - name: make sure redis.log file exists
#   copy: src=templates/redis.log dest=/var/log/redis.log owner=redis group=redis mode=0644

# - name: copy upstart file
#   copy: src=templates/upstart.conf dest=/etc/init/redis.conf

- name: copy redis.conf file
  copy: src=files/redis.conf dest=/etc/redis/redis.conf group=redis owner=redis

# - name: copy custom template
#   template: src=templates/redis.local.conf.j2 dest=/etc/redis/redis.local.conf group=redis owner=redis

# - name: copy redis-local script
#   template: src=templates/redis-local.j2 dest=/usr/local/bin/redis-local mode=0755

# - name: installing redis binaries
#   command: cp /tmp/redis-stable/src/{{ item }} /usr/local/bin
#   with_items: 
#     - redis-server
#     - redis-cli
#     - redis-check-aof
#     - redis-check-dump

# - name: cleaning up build files
#   command: rm -rf /tmp/{{ item }}
#   wi
# - name: Redis-server start
#   service: name=redis-server state=started enabled=yes
#   become: yes
#     
# - name: Redis-server start
#   service: name=redis-server state=started enabled=yes
#   become: yes
#     
# - name: Redis-server start
#   service: name=redis-server state=started enabled=yes
#   become: yes

# - na
# - name: Redis-server start
#   service: name=redis-server state=started enabled=yes
#   become: yes
#   se
# - name: Redis-server start
#   service: name=redis-server state=started enabled=yes
#   become: yes

# - name
# - name: Redis-server start
#   service: name=redis-server state=started enabled=yes
#   become: yes
  # apt:
# - name: Redis-server start
#   service: name=redis-server state=started enabled=yes
#   become: yes
    # name: redis

# - name: Install "redis-server" 
#   apt:
#     name: redis

# - name: Install "redis-server" 
#   apt:
#     name: redis-server

# - name: Ensure Redis is present
#   apt: pkg=redis-server state=latest
#   become: yes

# - name: Ensure Redis is present
#   apt: pkg=redis state=latest
#   become: yes

# - name: Redis start
#   service: name=redis state=started enabled=yes
#   become: yes

# - name: ensure redis service is restarted
#   service: name=redis state=restarted

# - name: Redis-server start
#   service: name=redis-server state=started enabled=yes
#   become: yes

# - name: Redis-server Restart
#   service: name=redis-server state=restarted enabled=yes
#   become: yes

- name: Ensure Redis Configuration
  template: 
    src: "{{playbook_dir}}/roles/redis/files/redis.conf"
    dest: "/etc/bin/redis.conf owner=root group=root mode=0777"
  become: yes